# Project name
PROJECT: "test_data_"   # Add name based on the test step

# ============================== Sub-workflow input definition ===============================

# Paths to preprocessed long reads, clean short reads, clean long reads, input for classification and annotation
preprocessed_long_reads: "/data/preprocessed_long_reads"         # Directory containing preprocessed long reads, should be <sample>.*.fasta 
clean_short_reads: "/data/clean_short_reads"                     # Directory containing clean short reads, should be <sample>_<fr>.*.fq.gz  
clean_long_reads: "/data/clean_long_reads"                       # Directory containing clean long reads, should be <sample>.*.fasta        
input_for_classification: "/data/input_for_classification"       # Directory containing input files for classification, should be <sample>.*.fasta 
input_for_annotation:
  nucl: "/data/input_for_annotation/transcriptome.fasta"         # Path to nucleotide file for annotation 
  prot: "/data/input_for_annotation/transcriptome_protein.fasta" # Path to protein file for annotation    
input_for_quality: 
  nucl: "/data/input_for_annotation/transcriptome.fasta"         # Path to nucleotide file for quality assessment 
  prot: "/data/input_for_annotation/transcriptome_protein.fasta" # Path to protein file for quality assessment    

# ================== Shared parameters for some or all of the sub-workflows ==================
 
# Paths to sequencing data
RNASEQ_INDIR: "data/test_data/illumina" # Directory containing Illumina RNA-Seq data, format: <sample>_<fr>.fq.gz (e.g., brain1_1.fq.gz and brain1_2.fq.gz)
ISOSEQ_INDIR: "data/test_data/pacbio" # Directory containing PacBio Iso-Seq data

# Sequencing type for Illumina Reads
END: "PE"  # "PE" (Paired-End) or "SE" (Single-End)


# ================== Configuration for Quality Control of SR ==================

# FastQC parameters
fastqc:
  threads: 1    # Cores
  memory: 1000  # Memory in MB

# ================== Configuration for filtering and trimming of SR ==================

# FastQ Screen parameters for screening libraries against different organisms
fastqscreen:  
  threads: 2    # Cores
  memory: 4000  # Memory in MB
  # config file for fastqscreen - install genomes withb precheck before
  conf: "resources/fastqscreen/fastq_screen.conf"  # Configuration file for FastQ Screen. You can install it with precheck.py script. It will be in the resources/fastqscreen directory. 

# Fastp parameters for trimming sequences
fastp:
  threads: 2      # Cores
  memory: 4000    # Memory in MB
  adapter: "resources/short_reads_adapters.fa"  # Adapter file 
  parameters: "-r --cut_window_size 4 --cut_mean_quality 15 --correction -l 20" # Trimming parameters, -l is minimun allowed length

# ================== Configuration for Processing LR ==================

# Primer file for ISOSEQ3
primers: "resources/pacbio_adapter.fasta"

# Parameters for processing subreads to circular consensus sequences (CCS)
subreads2ccs:
  min_passes: 3   # Minimum number of passess each read
  min_rq: 0.99    # Minimum quality -> choose 0.99 for HQ reads
  threads: 4      # Number of cores  
  memory: "8000"  # Memory in MB

# Parameters for converting CCS to full-length sequences
ccs2fl: 
  threads: 4      # Number of cores
  parameters: "--peek-guess" # optional, it chooses one between the primer pairs. 
  memory: "8000" # Memory in MB

# Parameters for converting full-length sequences to full-length non-chimeric (FLNC) sequences
fl2flnc:
  threads: 4      # cores
  memory: "4000"  # Memory in MB

# Parameters for clustering FLNC sequences
flnc2cluster:
  threads: 4      # Cores
  cluster_type: "cluster2" # Options: "cluster" (strict) or "cluster2" (faster)
  memory: "4000"  # Memory in MB

#isoseq3 cluster ${FLNC}/${sample}/${sample}.flnc.fofn ${sample}/${sample}.clustered.bam -j 8 --use-qvs
#isoseq3 cluster2 ${FLNC}/${sample}/${sample}.flnc.fofn ${sample}/${sample}.clustered2.bam -j 8 

# ================== Configuration for Contamination Removal ==================

# BUSCO parameters for contamination assessment, ALSO FOR QUALITY ASSESSMENT
busco:
  threads: 4          # Number of cores
  memory:  "4000"     # Memory in MB
  lineage: "vertebrata_odb10" # BUSCO lineage dataset, if you want auto-lineage, leave blank as "".
  data_path: "resources/busco_downloads"

# Bowtie2 parameters for read alignment
bowtie2:
  indexing_threads: 1
  indexing_memory: "2000"                 # Memory in MB 
  mapping_threads: 2
  mapping_memory: "2000"                 # Memory in MB
  mapping_parameters: "--no-unal -k 20"  # Mapping parameters

# BLASTn parameters for sequence alignment
blastn: 
  split_size: 200   # Number of sequences per split file
  threads: 4        # Cores
  memory: "4000"    # Memory in MB
  outfmt6: "6 qseqid staxids bitscore std qcovs qcovhsp stitle" # Output format
  database: "" # Path to NT database
  params: "-evalue 1e-25  -max_target_seqs 1 -max_hsps 1" # BLAST parameters for contamination check

# BlobTools parameters for contamination assessment and removal
blobtools:
  taxdir: "resources/taxdump" # Path to taxdump directory
  threads: 4         # Number of cores
  memory: "8000"        # Memory in MB
  plot_extension: "png" # Output plot format (png or svg)

# BlobTools filter parameters for taxa removal
blobtools_filter:
  bestsumorder_phylum: # it will keep the taxa name below, and exclude rest. 
    - Chordata # example
    - no-hit    

# Extra parameters for contamination removal
MT_removal: "yes"                 # Mitochondrial removal ("yes" or "no") keys using for removal: "mitochondrial", "mitochondrion"
organism: "Taeniopygia guttata"   # Organism of interest, using together with MT_removal to remove mitochondrial fragments
rRNA_removal: "yes"               # rRNA removal ("yes" or "no") keys using for removal: "rRNA,|, rRNA"

# ================== Configuration for Error Correction by Illumina Reads ==================
error_correction:
  proceed: "yes" # or "no"
  threads: 4
  memory: "8000"   # for large files, bwt needs high memory

# FMLRC parameters for error correction
fmlrc_parameters: ""

# ================== Configuration for Classification ==================

# CD-HIT-EST is an optional rule! - for sequence clustering 
cd-hit-est:
  proceed: "yes"  ## Do you want to proceed cd-hit-est before evidential gene! ("yes" or "no")
  threads: 2
  memory: 4000
  similarity: "0.95"
  extra_parameters: "-G 0 -aL 0.00 -aS 0.99 -AS 30"

# EvidentialGene parameters for transcript classification 
evigene:
  threads: 4                        # number of cores
  memory: "4000"                    # memory in MB
  min_aa: "100"                     # minimum amino acid length
  pHeterozygosity: "2"              # heterozygosity parameters 
  extra: "-ablastab=blastp_table"   # additional parameters

  # ================== Configuration for Annotation ==================

# If you are going to use your own protein.fasta file. It should have TransDecoder header format! 
# Below conditional will modify header from Evigene format to TransDecoder format. 
# If you have different formatting for the header, Say NO below and you should change it correct format before running the annotation step.
modify_protein_header: "yes" # or no

# Register file path for Signalp6 and Tmhmmv2
# you can download it from https://services.healthtech.dtu.dk/
signalp6_register: "resources/signalp6/signalp-6.0h.fast.tar.gz"
tmhmmv2_register: "resources/tmhmm2/tmhmm-2.0c.Linux.tar.gz" 

# Trinotate parameters for transcriptome annotation
trinotate:
  path: "resources/Trinotate-Trinotate-v4.0.2"
  trinotate_data_dir: "resources/TRINOTATE_DATA_DIR" # Directory containing Trinotate data
  split_size: 200                               # Number of sequences per split file
  outfmt: "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore stitle" # Output format of homology search file, you need stitle for SPECIES PLOT
  e-value: "1e-5" # e-value threshold for homology search 
  nr_path: "" # path for dimaond index of NR database
  nt_path: "" # path for NT index files 

# Possible databases for annotation
database_run:
  - swissprot_blastx
  - swissprot_blastp
  - pfam
  - signalp6            # make sure to register first
  - tmhmmv2             # make sure to register first
  #- eggnog_mapper
  - infernal
  #- nr_blastx           # Define your NR diamond index folder
  #- nr_blastp           # Define your NR diamond index folder
  #- nt                  # Define your NT DB

# file format for plots
format: "pdf" # OPTIONS: pdf or svg

# ================== Configuration for Quality Assessment ==================

# Summarize contigs 
nanoplot:
  memory: 2000 # Memory in MB
  threads: 2   # cores 

# BUSCO parameters were previously defined at contamination_removal part!

# SwissProt/UniProt paths for diamond index of database
  # for swissprot path, if you run annotation smk, leave BLANK, you already have swissprot.dmnd file in the data/TRINOTATE_DATA_DIR folder,
  # otherwise you have to define your own index file.
swissprot:
  fasta: ""     # Path to SwissProt fasta file, Leave blank if you run ANNOTATION.SMK previously.
  diamond: ""   # Path to diamond index of SwissProt fasta file, Leave blank if you run ANNOTATION.SMK previously.

# if you test your transcritpome with closely related organism
custom_db:
  fasta: ""     # Path to custom fasta file 
  diamond: ""   # Path to custom diamond index of fasta file

# Diamond parameters for homology search - will be used in to find closely simialer sequences against database
diamond:
  memory: 8000 # Memory in MB
  threads: 4   # number of cores
  outfmt: "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore stitle qcovhsp"
  extra_parameters: "--max-target-seqs 1 --max-hsps 1 --evalue 1e-20"


# ================== END OF THE CONFIG FILE ==================
